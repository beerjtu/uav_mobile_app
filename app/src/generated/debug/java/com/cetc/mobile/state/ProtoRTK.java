// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: state/RTK.proto

package com.cetc.mobile.state;

public final class ProtoRTK {
  private ProtoRTK() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface RTKOrBuilder extends
      // @@protoc_insertion_point(interface_extends:RTK)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional bool isConnected = 1;</code>
     */
    boolean getIsConnected();

    /**
     * <code>optional bool isRTKBeingUsed = 2;</code>
     */
    boolean getIsRTKBeingUsed();

    /**
     * <code>optional .RTK.HeadingSolution headingSolution = 3;</code>
     */
    int getHeadingSolutionValue();
    /**
     * <code>optional .RTK.HeadingSolution headingSolution = 3;</code>
     */
    com.cetc.mobile.state.ProtoRTK.RTK.HeadingSolution getHeadingSolution();
  }
  /**
   * Protobuf type {@code RTK}
   */
  public  static final class RTK extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:RTK)
      RTKOrBuilder {
    // Use RTK.newBuilder() to construct.
    private RTK(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RTK() {
      isConnected_ = false;
      isRTKBeingUsed_ = false;
      headingSolution_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private RTK(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              isConnected_ = input.readBool();
              break;
            }
            case 16: {

              isRTKBeingUsed_ = input.readBool();
              break;
            }
            case 24: {
              int rawValue = input.readEnum();

              headingSolution_ = rawValue;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.cetc.mobile.state.ProtoRTK.internal_static_RTK_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.cetc.mobile.state.ProtoRTK.internal_static_RTK_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.cetc.mobile.state.ProtoRTK.RTK.class, com.cetc.mobile.state.ProtoRTK.RTK.Builder.class);
    }

    /**
     * Protobuf enum {@code RTK.HeadingSolution}
     */
    public enum HeadingSolution
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>NONE = 0;</code>
       */
      NONE(0),
      /**
       * <code>SINGLE_POINT = 16;</code>
       */
      SINGLE_POINT(16),
      /**
       * <code>FLOAT = 34;</code>
       */
      FLOAT(34),
      /**
       * <code>FIXED_POINT = 50;</code>
       */
      FIXED_POINT(50),
      /**
       * <code>UNKNOWN = 51;</code>
       */
      UNKNOWN(51),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>NONE = 0;</code>
       */
      public static final int NONE_VALUE = 0;
      /**
       * <code>SINGLE_POINT = 16;</code>
       */
      public static final int SINGLE_POINT_VALUE = 16;
      /**
       * <code>FLOAT = 34;</code>
       */
      public static final int FLOAT_VALUE = 34;
      /**
       * <code>FIXED_POINT = 50;</code>
       */
      public static final int FIXED_POINT_VALUE = 50;
      /**
       * <code>UNKNOWN = 51;</code>
       */
      public static final int UNKNOWN_VALUE = 51;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static HeadingSolution valueOf(int value) {
        return forNumber(value);
      }

      public static HeadingSolution forNumber(int value) {
        switch (value) {
          case 0: return NONE;
          case 16: return SINGLE_POINT;
          case 34: return FLOAT;
          case 50: return FIXED_POINT;
          case 51: return UNKNOWN;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<HeadingSolution>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          HeadingSolution> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<HeadingSolution>() {
              public HeadingSolution findValueByNumber(int number) {
                return HeadingSolution.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.cetc.mobile.state.ProtoRTK.RTK.getDescriptor().getEnumTypes().get(0);
      }

      private static final HeadingSolution[] VALUES = values();

      public static HeadingSolution valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private HeadingSolution(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:RTK.HeadingSolution)
    }

    public static final int ISCONNECTED_FIELD_NUMBER = 1;
    private boolean isConnected_;
    /**
     * <code>optional bool isConnected = 1;</code>
     */
    public boolean getIsConnected() {
      return isConnected_;
    }

    public static final int ISRTKBEINGUSED_FIELD_NUMBER = 2;
    private boolean isRTKBeingUsed_;
    /**
     * <code>optional bool isRTKBeingUsed = 2;</code>
     */
    public boolean getIsRTKBeingUsed() {
      return isRTKBeingUsed_;
    }

    public static final int HEADINGSOLUTION_FIELD_NUMBER = 3;
    private int headingSolution_;
    /**
     * <code>optional .RTK.HeadingSolution headingSolution = 3;</code>
     */
    public int getHeadingSolutionValue() {
      return headingSolution_;
    }
    /**
     * <code>optional .RTK.HeadingSolution headingSolution = 3;</code>
     */
    public com.cetc.mobile.state.ProtoRTK.RTK.HeadingSolution getHeadingSolution() {
      com.cetc.mobile.state.ProtoRTK.RTK.HeadingSolution result = com.cetc.mobile.state.ProtoRTK.RTK.HeadingSolution.valueOf(headingSolution_);
      return result == null ? com.cetc.mobile.state.ProtoRTK.RTK.HeadingSolution.UNRECOGNIZED : result;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (isConnected_ != false) {
        output.writeBool(1, isConnected_);
      }
      if (isRTKBeingUsed_ != false) {
        output.writeBool(2, isRTKBeingUsed_);
      }
      if (headingSolution_ != com.cetc.mobile.state.ProtoRTK.RTK.HeadingSolution.NONE.getNumber()) {
        output.writeEnum(3, headingSolution_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (isConnected_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, isConnected_);
      }
      if (isRTKBeingUsed_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, isRTKBeingUsed_);
      }
      if (headingSolution_ != com.cetc.mobile.state.ProtoRTK.RTK.HeadingSolution.NONE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, headingSolution_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.cetc.mobile.state.ProtoRTK.RTK)) {
        return super.equals(obj);
      }
      com.cetc.mobile.state.ProtoRTK.RTK other = (com.cetc.mobile.state.ProtoRTK.RTK) obj;

      boolean result = true;
      result = result && (getIsConnected()
          == other.getIsConnected());
      result = result && (getIsRTKBeingUsed()
          == other.getIsRTKBeingUsed());
      result = result && headingSolution_ == other.headingSolution_;
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      hash = (37 * hash) + ISCONNECTED_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getIsConnected());
      hash = (37 * hash) + ISRTKBEINGUSED_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getIsRTKBeingUsed());
      hash = (37 * hash) + HEADINGSOLUTION_FIELD_NUMBER;
      hash = (53 * hash) + headingSolution_;
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.cetc.mobile.state.ProtoRTK.RTK parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cetc.mobile.state.ProtoRTK.RTK parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cetc.mobile.state.ProtoRTK.RTK parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cetc.mobile.state.ProtoRTK.RTK parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cetc.mobile.state.ProtoRTK.RTK parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.cetc.mobile.state.ProtoRTK.RTK parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.cetc.mobile.state.ProtoRTK.RTK parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.cetc.mobile.state.ProtoRTK.RTK parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.cetc.mobile.state.ProtoRTK.RTK parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.cetc.mobile.state.ProtoRTK.RTK parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.cetc.mobile.state.ProtoRTK.RTK prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code RTK}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:RTK)
        com.cetc.mobile.state.ProtoRTK.RTKOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.cetc.mobile.state.ProtoRTK.internal_static_RTK_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.cetc.mobile.state.ProtoRTK.internal_static_RTK_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.cetc.mobile.state.ProtoRTK.RTK.class, com.cetc.mobile.state.ProtoRTK.RTK.Builder.class);
      }

      // Construct using com.cetc.mobile.state.ProtoRTK.RTK.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        isConnected_ = false;

        isRTKBeingUsed_ = false;

        headingSolution_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.cetc.mobile.state.ProtoRTK.internal_static_RTK_descriptor;
      }

      public com.cetc.mobile.state.ProtoRTK.RTK getDefaultInstanceForType() {
        return com.cetc.mobile.state.ProtoRTK.RTK.getDefaultInstance();
      }

      public com.cetc.mobile.state.ProtoRTK.RTK build() {
        com.cetc.mobile.state.ProtoRTK.RTK result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.cetc.mobile.state.ProtoRTK.RTK buildPartial() {
        com.cetc.mobile.state.ProtoRTK.RTK result = new com.cetc.mobile.state.ProtoRTK.RTK(this);
        result.isConnected_ = isConnected_;
        result.isRTKBeingUsed_ = isRTKBeingUsed_;
        result.headingSolution_ = headingSolution_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.cetc.mobile.state.ProtoRTK.RTK) {
          return mergeFrom((com.cetc.mobile.state.ProtoRTK.RTK)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.cetc.mobile.state.ProtoRTK.RTK other) {
        if (other == com.cetc.mobile.state.ProtoRTK.RTK.getDefaultInstance()) return this;
        if (other.getIsConnected() != false) {
          setIsConnected(other.getIsConnected());
        }
        if (other.getIsRTKBeingUsed() != false) {
          setIsRTKBeingUsed(other.getIsRTKBeingUsed());
        }
        if (other.headingSolution_ != 0) {
          setHeadingSolutionValue(other.getHeadingSolutionValue());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.cetc.mobile.state.ProtoRTK.RTK parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.cetc.mobile.state.ProtoRTK.RTK) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private boolean isConnected_ ;
      /**
       * <code>optional bool isConnected = 1;</code>
       */
      public boolean getIsConnected() {
        return isConnected_;
      }
      /**
       * <code>optional bool isConnected = 1;</code>
       */
      public Builder setIsConnected(boolean value) {
        
        isConnected_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool isConnected = 1;</code>
       */
      public Builder clearIsConnected() {
        
        isConnected_ = false;
        onChanged();
        return this;
      }

      private boolean isRTKBeingUsed_ ;
      /**
       * <code>optional bool isRTKBeingUsed = 2;</code>
       */
      public boolean getIsRTKBeingUsed() {
        return isRTKBeingUsed_;
      }
      /**
       * <code>optional bool isRTKBeingUsed = 2;</code>
       */
      public Builder setIsRTKBeingUsed(boolean value) {
        
        isRTKBeingUsed_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool isRTKBeingUsed = 2;</code>
       */
      public Builder clearIsRTKBeingUsed() {
        
        isRTKBeingUsed_ = false;
        onChanged();
        return this;
      }

      private int headingSolution_ = 0;
      /**
       * <code>optional .RTK.HeadingSolution headingSolution = 3;</code>
       */
      public int getHeadingSolutionValue() {
        return headingSolution_;
      }
      /**
       * <code>optional .RTK.HeadingSolution headingSolution = 3;</code>
       */
      public Builder setHeadingSolutionValue(int value) {
        headingSolution_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .RTK.HeadingSolution headingSolution = 3;</code>
       */
      public com.cetc.mobile.state.ProtoRTK.RTK.HeadingSolution getHeadingSolution() {
        com.cetc.mobile.state.ProtoRTK.RTK.HeadingSolution result = com.cetc.mobile.state.ProtoRTK.RTK.HeadingSolution.valueOf(headingSolution_);
        return result == null ? com.cetc.mobile.state.ProtoRTK.RTK.HeadingSolution.UNRECOGNIZED : result;
      }
      /**
       * <code>optional .RTK.HeadingSolution headingSolution = 3;</code>
       */
      public Builder setHeadingSolution(com.cetc.mobile.state.ProtoRTK.RTK.HeadingSolution value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        headingSolution_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .RTK.HeadingSolution headingSolution = 3;</code>
       */
      public Builder clearHeadingSolution() {
        
        headingSolution_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:RTK)
    }

    // @@protoc_insertion_point(class_scope:RTK)
    private static final com.cetc.mobile.state.ProtoRTK.RTK DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.cetc.mobile.state.ProtoRTK.RTK();
    }

    public static com.cetc.mobile.state.ProtoRTK.RTK getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RTK>
        PARSER = new com.google.protobuf.AbstractParser<RTK>() {
      public RTK parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new RTK(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RTK> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RTK> getParserForType() {
      return PARSER;
    }

    public com.cetc.mobile.state.ProtoRTK.RTK getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_RTK_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_RTK_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\017state/RTK.proto\"\271\001\n\003RTK\022\023\n\013isConnected" +
      "\030\001 \001(\010\022\026\n\016isRTKBeingUsed\030\002 \001(\010\022-\n\017headin" +
      "gSolution\030\003 \001(\0162\024.RTK.HeadingSolution\"V\n" +
      "\017HeadingSolution\022\010\n\004NONE\020\000\022\020\n\014SINGLE_POI" +
      "NT\020\020\022\t\n\005FLOAT\020\"\022\017\n\013FIXED_POINT\0202\022\013\n\007UNKN" +
      "OWN\0203B!\n\025com.cetc.mobile.stateB\010ProtoRTK" +
      "b\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_RTK_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_RTK_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_RTK_descriptor,
        new java.lang.String[] { "IsConnected", "IsRTKBeingUsed", "HeadingSolution", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
